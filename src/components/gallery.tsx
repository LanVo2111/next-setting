"use client"

import { useState } from "react";
import Image from "next/image";
import styles from '../styles/gallery.module.scss'


const imageListAll = [
  {
    imgPath: '/assets/gallery_1.jpg',
    alt: ''
  },
  {
    imgPath: '/assets/gallery_2.jpg',
    alt: ''
  },
  {
    imgPath: '/assets/gallery_3.jpg',
    alt: ''
  },
  {
    imgPath: '/assets/gallery_4.jpg',
    alt: ''
  },
  {
    imgPath: '/assets/gallery_5.jpg',
    alt: ''
  },
  {
    imgPath: '/assets/gallery_6.jpg',
    alt: ''
  },
]

const tabData = [
  {
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none">
      <path d="M21.5 22H3.5M19.5 22V15M5.5 22V15" stroke="#121212" strokeWidth="1.5" strokeLinecap="round" />
      <path d="M17.028 2H7.97201C6.76901 2 6.16801 2 5.68501 2.299C5.20101 2.597 4.93201 3.135 4.39501 4.211L2.99001 7.76C2.66601 8.58 2.38201 9.546 2.92801 10.239C3.18523 10.566 3.53803 10.8047 3.93728 10.9218C4.33653 11.0388 4.76235 11.0285 5.15543 10.8921C5.54851 10.7558 5.88929 10.5002 6.13029 10.1611C6.3713 9.82192 6.50054 9.41606 6.50001 9C6.50001 9.53043 6.71072 10.0391 7.08579 10.4142C7.46087 10.7893 7.96957 11 8.50001 11C9.03044 11 9.53915 10.7893 9.91422 10.4142C10.2893 10.0391 10.5 9.53043 10.5 9C10.5 9.53043 10.7107 10.0391 11.0858 10.4142C11.4609 10.7893 11.9696 11 12.5 11C13.0304 11 13.5391 10.7893 13.9142 10.4142C14.2893 10.0391 14.5 9.53043 14.5 9C14.5 9.53043 14.7107 10.0391 15.0858 10.4142C15.4609 10.7893 15.9696 11 16.5 11C17.0304 11 17.5391 10.7893 17.9142 10.4142C18.2893 10.0391 18.5 9.53043 18.5 9C18.5 9.41573 18.6294 9.82114 18.8705 10.1599C19.1115 10.4986 19.4521 10.7538 19.8449 10.8899C20.2377 11.0261 20.6631 11.0365 21.0621 10.9197C21.4611 10.8028 21.8137 10.5646 22.071 10.238C22.617 9.545 22.333 8.579 22.009 7.759L20.605 4.211C20.068 3.135 19.799 2.597 19.315 2.299C18.832 2 18.231 2 17.028 2Z" stroke="#121212" strokeWidth="1.5" strokeLinejoin="round" />
    </svg>,
    name: 'All'
  },
  {
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none">
      <path d="M11.646 7.023C12.026 6.34 12.216 6 12.5 6C12.784 6 12.974 6.34 13.354 7.023L13.452 7.199C13.56 7.393 13.614 7.489 13.698 7.553C13.783 7.617 13.888 7.641 14.098 7.688L14.288 7.732C15.026 7.899 15.395 7.982 15.483 8.264C15.571 8.547 15.319 8.841 14.816 9.429L14.686 9.581C14.543 9.748 14.471 9.831 14.439 9.935C14.407 10.039 14.418 10.15 14.439 10.373L14.459 10.576C14.535 11.361 14.573 11.754 14.344 11.928C14.114 12.102 13.768 11.943 13.077 11.625L12.899 11.543C12.702 11.453 12.604 11.408 12.5 11.408C12.396 11.408 12.298 11.453 12.101 11.543L11.923 11.625C11.232 11.944 10.886 12.102 10.656 11.928C10.426 11.754 10.465 11.361 10.541 10.576L10.561 10.373C10.582 10.15 10.593 10.039 10.561 9.935C10.529 9.832 10.457 9.748 10.314 9.581L10.184 9.429C9.68101 8.841 9.42901 8.547 9.51701 8.264C9.60501 7.982 9.97401 7.899 10.712 7.732L10.902 7.688C11.112 7.641 11.217 7.618 11.302 7.553C11.386 7.489 11.44 7.393 11.548 7.199L11.646 7.023Z" stroke="#121212" strokeWidth="1.5" />
      <path d="M19.5 9C19.5 9.91925 19.3189 10.8295 18.9672 11.6788C18.6154 12.5281 18.0998 13.2997 17.4497 13.9497C16.7997 14.5998 16.0281 15.1154 15.1788 15.4672C14.3295 15.8189 13.4193 16 12.5 16C11.5807 16 10.6705 15.8189 9.82122 15.4672C8.97194 15.1154 8.20026 14.5998 7.55025 13.9497C6.90024 13.2997 6.38463 12.5281 6.03284 11.6788C5.68106 10.8295 5.5 9.91925 5.5 9C5.5 7.14348 6.2375 5.36301 7.55025 4.05025C8.86301 2.7375 10.6435 2 12.5 2C14.3565 2 16.137 2.7375 17.4497 4.05025C18.7625 5.36301 19.5 7.14348 19.5 9Z" stroke="#121212" strokeWidth="1.5" />
      <path d="M5.95599 12L3.49199 14.551C2.95199 15.11 2.68199 15.39 2.58799 15.627C2.37499 16.166 2.55799 16.765 3.02099 17.049C3.22499 17.173 3.59199 17.212 4.32599 17.29C4.74099 17.334 4.94799 17.355 5.12099 17.422C5.31442 17.497 5.48925 17.6131 5.63342 17.7623C5.77759 17.9114 5.88765 18.0901 5.95599 18.286C6.01999 18.466 6.04099 18.68 6.08399 19.11C6.15799 19.87 6.19599 20.25 6.31599 20.46C6.58999 20.94 7.16899 21.128 7.68899 20.908C7.91899 20.812 8.18899 20.533 8.72899 19.973L12.5 16.068L16.271 19.973C16.811 20.533 17.081 20.812 17.311 20.908C17.831 21.128 18.41 20.94 18.684 20.46C18.804 20.25 18.841 19.87 18.916 19.11C18.959 18.68 18.98 18.466 19.044 18.286C19.188 17.884 19.49 17.571 19.879 17.422C20.052 17.355 20.259 17.334 20.674 17.29C21.408 17.212 21.775 17.173 21.979 17.049C22.442 16.765 22.625 16.166 22.412 15.627C22.318 15.39 22.048 15.11 21.508 14.551L19.044 12" stroke="#121212" strokeWidth="1.5" />
    </svg>,
    name: 'Best Sellers'
  },
  {
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none">
      <path d="M4.512 15.762L6.202 10.693C6.968 8.39499 7.351 7.24599 8.257 7.03299C9.163 6.81799 10.02 7.67499 11.732 9.38799L15.112 12.767C16.824 14.48 17.681 15.336 17.467 16.242C17.253 17.148 16.104 17.532 13.806 18.297L8.737 19.987C5.972 20.909 4.589 21.37 3.859 20.64C3.129 19.91 3.59 18.527 4.512 15.762Z" stroke="#121212" strokeWidth="1.5" strokeLinecap="round" />
      <path d="M12.735 18.346C12.735 18.346 11.977 16.065 11.977 14.556C11.977 13.046 12.735 10.764 12.735 10.764M8.56501 19.484C8.56501 19.484 7.92501 16.731 7.80701 14.934C7.61201 11.965 8.56501 7.35299 8.56501 7.35299M15.01 10.006L15.153 9.28599C15.299 8.55899 15.823 7.96599 16.526 7.73199C16.8715 7.61672 17.1803 7.41218 17.4212 7.1391C17.6622 6.86602 17.8267 6.53411 17.898 6.17699L18.042 5.45699M18.07 13.253L18.282 13.376C18.939 13.756 19.765 13.672 20.333 13.169C20.5847 12.9456 20.8952 12.7989 21.2276 12.7463C21.56 12.6936 21.9006 12.7373 22.209 12.872L22.5 13M10.295 2.77899C10.131 3.04721 10.062 3.36283 10.0992 3.67503C10.1364 3.98722 10.2776 4.27781 10.5 4.49999L10.597 4.59799C10.991 4.99099 11.136 5.56799 10.975 6.10099" stroke="#121212" strokeWidth="1.5" strokeLinecap="round" />
      <path d="M7.428 3.94002C7.47791 3.89025 7.53712 3.85079 7.60227 3.82391C7.66742 3.79702 7.73723 3.78323 7.80771 3.78333C7.87819 3.78342 7.94796 3.79739 8.01304 3.82445C8.07812 3.85151 8.13723 3.89112 8.187 3.94102C8.23677 3.99092 8.27623 4.05014 8.30311 4.11529C8.33 4.18044 8.34379 4.25025 8.3437 4.32073C8.34361 4.39121 8.32963 4.46098 8.30257 4.52606C8.27552 4.59114 8.23591 4.65025 8.186 4.70002C8.08522 4.80054 7.94864 4.8569 7.8063 4.85671C7.66396 4.85653 7.52752 4.7998 7.427 4.69902C7.32649 4.59824 7.27012 4.46165 7.27031 4.31931C7.2705 4.17697 7.32722 4.04054 7.428 3.94002ZM12.657 7.15702C12.7068 7.10718 12.766 7.06765 12.8311 7.04068C12.8962 7.01371 12.966 6.99983 13.0365 6.99983C13.107 6.99983 13.1768 7.01371 13.2419 7.04068C13.307 7.06765 13.3662 7.10718 13.416 7.15702C13.4658 7.20686 13.5054 7.26602 13.5323 7.33114C13.5593 7.39625 13.5732 7.46604 13.5732 7.53652C13.5732 7.607 13.5593 7.67679 13.5323 7.7419C13.5054 7.80702 13.4658 7.86618 13.416 7.91602C13.3154 8.01667 13.1788 8.07321 13.0365 8.07321C12.8942 8.07321 12.7577 8.01667 12.657 7.91602C12.5564 7.81537 12.4998 7.67886 12.4998 7.53652C12.4998 7.39418 12.5564 7.25767 12.657 7.15702ZM17.657 10.157C17.7068 10.1072 17.766 10.0676 17.8311 10.0407C17.8962 10.0137 17.966 9.99983 18.0365 9.99983C18.107 9.99983 18.1768 10.0137 18.2419 10.0407C18.307 10.0676 18.3662 10.1072 18.416 10.157C18.4658 10.2069 18.5054 10.266 18.5323 10.3311C18.5593 10.3962 18.5732 10.466 18.5732 10.5365C18.5732 10.607 18.5593 10.6768 18.5323 10.7419C18.5054 10.807 18.4658 10.8662 18.416 10.916C18.3154 11.0167 18.1788 11.0732 18.0365 11.0732C17.8942 11.0732 17.7577 11.0167 17.657 10.916C17.5564 10.8154 17.4998 10.6789 17.4998 10.5365C17.4998 10.3942 17.5564 10.2577 17.657 10.157ZM19.558 15.313C19.6078 15.2632 19.667 15.2237 19.7321 15.1967C19.7972 15.1697 19.867 15.1558 19.9375 15.1558C20.008 15.1558 20.0778 15.1697 20.1429 15.1967C20.208 15.2237 20.2672 15.2632 20.317 15.313C20.3668 15.3629 20.4064 15.422 20.4333 15.4871C20.4603 15.5523 20.4742 15.622 20.4742 15.6925C20.4742 15.763 20.4603 15.8328 20.4333 15.8979C20.4064 15.963 20.3668 16.0222 20.317 16.072C20.2164 16.1727 20.0798 16.2292 19.9375 16.2292C19.7952 16.2292 19.6587 16.1727 19.558 16.072C19.4574 15.9714 19.4008 15.8349 19.4008 15.6925C19.4008 15.5502 19.4574 15.4137 19.558 15.313Z" fill="#121212" />
      <path d="M19.862 7.71402C19.192 8.38402 19.672 10.328 19.672 10.328C19.672 10.328 21.616 10.809 22.286 10.138C22.996 9.42802 22.594 8.49802 21.5 8.50002C21.503 7.40602 20.572 7.00402 19.862 7.71402Z" stroke="#121212" strokeLinejoin="round" />
      <path d="M15.688 3.41701L15.661 3.51501C15.631 3.62101 15.615 3.67501 15.622 3.72701C15.629 3.77901 15.658 3.82501 15.715 3.91601L15.768 3.99801C15.969 4.31801 16.07 4.47801 16.002 4.60901C15.932 4.74001 15.74 4.75501 15.354 4.78501L15.254 4.79301C15.144 4.80201 15.09 4.80601 15.042 4.83101C14.994 4.85601 14.958 4.89901 14.887 4.98601L14.822 5.06501C14.572 5.36901 14.447 5.52101 14.304 5.50201C14.161 5.48201 14.094 5.30401 13.963 4.94701L13.929 4.85501C13.891 4.75301 13.873 4.70301 13.836 4.66501C13.799 4.62901 13.748 4.61001 13.647 4.57301L13.555 4.53901C13.198 4.40701 13.02 4.34101 13 4.19901C12.98 4.05501 13.133 3.92901 13.437 3.67901L13.516 3.61401C13.602 3.54401 13.646 3.50801 13.671 3.46001C13.696 3.41201 13.701 3.35701 13.709 3.24701L13.717 3.14701C13.747 2.76201 13.762 2.56901 13.892 2.50001C14.023 2.43101 14.183 2.53201 14.503 2.73401L14.586 2.78601C14.676 2.84401 14.722 2.87201 14.775 2.87901C14.827 2.88701 14.88 2.87101 14.987 2.84101L15.084 2.81401C15.46 2.70701 15.647 2.65401 15.748 2.75401C15.848 2.85401 15.795 3.04201 15.688 3.41701Z" stroke="#121212" />
    </svg>,
    name: 'New'
  },
  {
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none">
      <path d="M17.5 2.12701C19.125 2.28701 20.22 2.64801 21.035 3.46501C22.5 4.92901 22.5 7.28601 22.5 12C22.5 16.714 22.5 19.071 21.035 20.536C19.572 22 17.214 22 12.5 22C7.786 22 5.429 22 3.964 20.536C2.5 19.07 2.5 16.714 2.5 12C2.5 7.28601 2.5 4.93001 3.964 3.46501C4.781 2.64801 5.874 2.28701 7.5 2.12701" stroke="#121212" strokeWidth="1.5" strokeLinecap="round" />
      <path d="M12.5 10V2M12.5 2L15.5 5M12.5 2L9.5 5" stroke="#121212" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
      <path d="M2.5 13H5.66C6.565 13 7.018 13 7.416 13.183C7.814 13.366 8.108 13.71 8.697 14.397L9.303 15.103C9.892 15.79 10.186 16.134 10.584 16.317C10.982 16.5 11.434 16.5 12.34 16.5H12.66C13.565 16.5 14.018 16.5 14.416 16.317C14.814 16.134 15.108 15.79 15.697 15.103L16.303 14.397C16.892 13.71 17.186 13.366 17.584 13.183C17.982 13 18.434 13 19.34 13H22.5" stroke="#121212" strokeWidth="1.5" strokeLinecap="round" />
    </svg>,
    name: 'Up Coming'
  }
]

export default function Gallery() {
  const [activeTabIndex, setActiveIndex] = useState(0)

  const handleSetActive = (index: number) => {
    setActiveIndex(index)
  }
  return (
    <section className={styles.gallery}>
      <div className="inner">
        <div className={styles['wrap-top']}>
          <h2 className={styles.title}>Our Furniture Gallery</h2>
          <p className={styles.txt}>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
        </div>

        <ul className={styles.tabs}>
          {
            tabData.map((tabItem, index: number) => (
              <li key={index} className={`${styles['tab-item']} ${activeTabIndex == index ? `${styles['active']}` : null}`} onClick={() => handleSetActive(index)}>
                {tabItem.icon}
                <span>{tabItem.name}</span>
              </li>
            ))
          }
        </ul>
        <div className={styles['gallery_list']}>
          {
            imageListAll.map((imgItem, index) => (
              <figure className={`gallery_item ${styles[`gallery_item-${index + 1}`]}`} key={index}>
                <Image src={imgItem.imgPath} alt={imgItem.alt} width={342} height={323} className="gallery_img" />
              </figure>
            ))
          }
        </div>
      </div>
    </section>
  )
}